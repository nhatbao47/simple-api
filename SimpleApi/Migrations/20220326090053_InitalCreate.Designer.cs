// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleApi.Entities;

#nullable disable

namespace SimpleApi.Migrations
{
    [DbContext(typeof(SimpleApiContext))]
    [Migration("20220326090053_InitalCreate")]
    partial class InitalCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SimpleApi.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Schedule", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 3, 26, 16, 0, 53, 482, DateTimeKind.Local).AddTicks(3662),
                            Description = "Stand up",
                            EndTime = "11:30",
                            Location = "Osaka",
                            StartTime = "09:00",
                            Title = "Meeting 1",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 3, 31, 16, 0, 53, 482, DateTimeKind.Local).AddTicks(3678),
                            Description = "Stand up",
                            EndTime = "11:30",
                            Location = "New York",
                            StartTime = "09:00",
                            Title = "Meeting 2",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2022, 4, 5, 16, 0, 53, 482, DateTimeKind.Local).AddTicks(3684),
                            Description = "Stand up",
                            EndTime = "11:30",
                            Location = "HCM",
                            StartTime = "09:00",
                            Title = "Meeting 3",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("SimpleApi.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description 1",
                            State = 1,
                            Title = "Task 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description 2",
                            State = 1,
                            Title = "Task 2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description 3",
                            State = 2,
                            Title = "Task 3"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description 4",
                            State = 2,
                            Title = "Task 4"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description 5",
                            State = 3,
                            Title = "Task 5"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Description 6",
                            State = 3,
                            Title = "Task 6"
                        });
                });

            modelBuilder.Entity("SimpleApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            Password = "123456",
                            Title = "Administrator",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "David",
                            Title = "Developer"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Lee",
                            Title = "PM"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tim",
                            Title = "QC"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
